// <auto-generated />
using BookStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreAPI.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    partial class BookStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookStoreAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Marcus",
                            LastName = "Aurelius"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Immanuel",
                            LastName = "Kant"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Adam",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "The Lord of the Rings is an epic high-fantasy novel by English author and scholar J. R. R. Tolkien.",
                            GenreId = 1,
                            ImgUrl = "https://s26162.pcdn.co/wp-content/uploads/2017/05/the-lord-of-the-rings-book-cover.jpg",
                            Title = "The Lord Of The Rings",
                            Year = 1949
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Description = "The Hobbit, or There and Back Again is a children's fantasy novel by English author J. R. R. Tolkien.",
                            GenreId = 1,
                            ImgUrl = "https://images-na.ssl-images-amazon.com/images/I/71KqBbH93lL.jpg",
                            Title = "The Hobbit",
                            Year = 1937
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Description = "Meditations is a series of personal writings by Marcus Aurelius, Roman Emperor from AD 161 to 180, recording his private notes to himself and ideas on Stoic philosophy.",
                            GenreId = 2,
                            ImgUrl = "https://images-na.ssl-images-amazon.com/images/I/7107Yk5DWtL.jpg",
                            Title = "Meditations",
                            Year = 180
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            Description = "The Critique of Pure Reason is a book by the German philosopher Immanuel Kant, in which the author seeks to determine the limits and scope of metaphysics.",
                            GenreId = 2,
                            ImgUrl = "https://www.gutenberg.org/files/4280/4280-h/images/cover.jpg",
                            Title = "Critique of Pure Reason",
                            Year = 1781
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 4,
                            Description = "An Inquiry into the Nature and Causes of the Wealth of Nations is the magnum opus of the Scottish economist and moral philosopher Adam Smith.",
                            GenreId = 3,
                            ImgUrl = "https://images-na.ssl-images-amazon.com/images/I/71yqXZeTuxL.jpg",
                            Title = "The Wealth of Nations",
                            Year = 1781
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.BookType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Paperback"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Audio"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kindle"
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.BookVariant", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("BookTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookId", "BookTypeId");

                    b.HasIndex("BookTypeId");

                    b.ToTable("BookVariants");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookTypeId = 1,
                            Price = 29.99m
                        },
                        new
                        {
                            BookId = 1,
                            BookTypeId = 3,
                            Price = 12.99m
                        },
                        new
                        {
                            BookId = 2,
                            BookTypeId = 1,
                            Price = 24.99m
                        },
                        new
                        {
                            BookId = 3,
                            BookTypeId = 1,
                            Price = 19.99m
                        },
                        new
                        {
                            BookId = 3,
                            BookTypeId = 2,
                            Price = 9.99m
                        },
                        new
                        {
                            BookId = 4,
                            BookTypeId = 1,
                            Price = 49.99m
                        },
                        new
                        {
                            BookId = 5,
                            BookTypeId = 1,
                            Price = 39.99m
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Economics"
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.Book", b =>
                {
                    b.HasOne("BookStoreAPI.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreAPI.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookStoreAPI.Models.BookVariant", b =>
                {
                    b.HasOne("BookStoreAPI.Models.Book", "Book")
                        .WithMany("BookVariants")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreAPI.Models.BookType", "BookType")
                        .WithMany()
                        .HasForeignKey("BookTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("BookType");
                });

            modelBuilder.Entity("BookStoreAPI.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookStoreAPI.Models.Book", b =>
                {
                    b.Navigation("BookVariants");
                });

            modelBuilder.Entity("BookStoreAPI.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
